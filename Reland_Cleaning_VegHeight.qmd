---
title: "Relandscaping Cleaning Template"
format: html
editor: visual
---

## Relandscaping Data Cleaning: Vegetation Height

Winter 2024 - MCRS Advanced Quantitative Methods Class Project

Team #: 4

Team Members: Cherry, Janet, Katelin

### Load Packages

```{r}
library(tidyverse)
library(dplyr)
library(readxl)
```

### Import Data Files

```{r}

veg_fall18_raw <- read_excel("Transect_VegHeight_Fall 2018 GH Relandscaping Transect Data.xlsx", sheet = 3, col_types = "text")|>
  slice(2:199)#remove sample row and all extra, empty data
  

veg_jun18_raw <- read_excel("Transect_VegHeight_GH Relandscaping Transect Data_Jun2018.xlsx", sheet =3, col_types = "text")|>
  slice(1:198)
    

veg_win19_raw <-read_excel("Transect_Winter 2019 GH Relandscaping Transect Data.xlsx",sheet =2, col_types = "text")|>
  slice(2:198)
   


#bind sheet 2 & 3 then add species code to define native vs non native
```

### Create Primary

Reformat the data from each of your imported spreadsheets to have common columns and column formats so you can bind them into one object.

#### Data Frame #1: Fall 2018 Data

```{r}
##date as.date, site ID + dist + all (cm) as.numeric, MISSING NOTES COL

veg_fall18_mid <- veg_fall18_raw |>
  mutate(Date = as.Date(as.numeric(Date), origin = "1899-12-30", )) |> #reformat date
  mutate(Distance = as.numeric(Distance)) |> #reformat Distance
  mutate(`Grass Height (cm)` = as.numeric(`Grass Height (cm)`)) |> #reformat grass
  mutate(`Forb Height (cm)` = as.numeric(`Forb Height (cm)`)) |> #reformat forbs
  mutate(`Shrub Height (cm)` = as.numeric(`Shrub Height (cm)`)) |> #reformat shrub
  mutate(`Tree Height (cm)` = as.numeric(`Tree Height (cm)`)) |> #reformat tree

  ###prelim cleaning done, set NA to 0
  
  mutate_at(vars(- Date, Observers, `Previous Veg.`, `Transect ID`, Notes), ~ ifelse(is.na(.), 0, .)) |> # replaces NA with 0 (for some reason is including the notes column)
  

  rename_all(~ gsub(" ", "_", .)) #replaces spaces in columns with _

colnames(veg_fall18_mid) [colnames(veg_fall18_mid) == "Previous_Veg."]  <- "Turf"
colnames(veg_fall18_mid) <- gsub("[()]", "", colnames(veg_fall18_mid))

##data frame cleaned, column names correctly formatted
```

#### Data Frame #2: June 2018 Data

```{r}
veg_jun18_mid <- veg_jun18_raw |>
  mutate(Date = as.Date(as.numeric(Date), origin = "1899-12-30", )) |> #reformat date
  mutate(Distance = as.numeric(Distance)) |> #reformat Distance
  mutate(`Grass Height (cm)` = as.numeric(`Grass Height (cm)`)) |> #reformat grass
  mutate(`Forb Height (cm)` = as.numeric(`Forb Height (cm)`)) |> #reformat forbs
  mutate(`Shrub Height (cm)` = as.numeric(`Shrub Height (cm)`)) |> #reformat shrub
  mutate(`Tree Height (cm)` = as.numeric(`Tree Height (cm)`)) |> #reformat tree
  
  mutate_at(vars(- Date, Observers, Turf, `Transect ID`), ~ ifelse(is.na(.), 0, .)) |> # replaces NA with 0 (for some reason is including the notes column)
  
  
  rename_all(~ gsub(" ", "_", .)) #replaces spaces in columns with _

colnames(veg_jun18_mid) <- gsub("[()]", "", colnames(veg_jun18_mid))

veg_jun18_mid$Notes <- as.character(0) #adds notes column, all values 0

```

#### Data Frame #3: Winter 2019 Data

```{r}
veg_win19_mid <- veg_win19_raw |>
  mutate(Date = as.Date(as.numeric(Date), origin = "1899-12-30", )) |> #reformat date
  mutate(Distance = as.numeric(Distance)) |> #reformat Distance
  mutate(`Grass Height (cm)` = as.numeric(`Grass Height (cm)`)) |> #reformat grass
  mutate(`Forb Height (cm)` = as.numeric(`Forb Height (cm)`)) |> #reformat forbs
  mutate(`Shrub Height (cm)` = as.numeric(`Shrub Height (cm)`)) |> #reformat shrub
  mutate(`Tree Height (cm)` = as.numeric(`Tree Height (cm)`)) |> #reformat tree
  
  mutate_at(vars(- Date, Observers, `Previous Veg.`, `Transect ID`, Notes), ~ ifelse(is.na(.), 0, .)) |> # replaces NA with 0 (for some reason is including the notes column)
  
  mutate(Notes = as.character(Notes)) |>

  rename_all(~ gsub(" ", "_", .)) #replaces spaces in columns with _

colnames(veg_win19_mid) [colnames(veg_win19_mid) == "Previous_Veg."]  <- "Turf"
colnames(veg_win19_mid) <- gsub("[()]", "", colnames(veg_win19_mid))

##data frame cleaned, column names correctly formatted
```

#### Complete Raw Data

Bind your cleaned data frames together into one object. Clean up any remaining column names or formats.

```{r}
#combine fall and june data
veg_comb18 <- bind_rows(veg_fall18_mid, veg_jun18_mid)
All_veg_data <- bind_rows(veg_comb18, veg_win19_mid)|>
  #rename colmun name Distance to have a unit measure
  rename('Distance_m' = Distance)
```

### Cleaning

Go through your raw data frame column by column to find and correct issues.

#### Issue #1: Reformat Variable Names

```{r}
#create a new df to save changes
Veg_Final <- All_veg_data |>
  #replace underscore with space
  mutate(Transect_ID = str_replace(Transect_ID, "_", " ")) |>
  #gsub replaces patterns in Transect_ID column. It looks for "Turf" followed by one or more digits ('(\\d+)') and replaces it with "Turf" followed by the same digits. Changes "Turf1" to "Turf 1" and so on.
  mutate(Transect_ID = gsub("Turf(\\d+)", "Turf \\1", Transect_ID)) |>
  #The above comment does the same with No Turf.
  mutate(Transect_ID = gsub("No Turf(\\d+)", "No Turf \\1", Transect_ID))|>
  #
  mutate(Site_ID = gsub("1", "Site 1", Site_ID))|>
  #
  mutate(Site_ID = gsub("2", "Site 2", Site_ID))|>
  #
  mutate(Distance_cm = case_when(
    Forb_Height_cm == 0 ~ 0,
    TRUE ~ 1))
```

### Save your cleaned and complete Primary data frame to .csv and .Rdata and save the file as VARIABLE_Primary.csv or similar.

```{r}
write.csv(Veg_Final, "VegHeight_Primary.csv", row.names=FALSE)
```
